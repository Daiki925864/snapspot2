<%= form_with model: @post_form, url: url, method: method, id: 'new_spot', local: true do |form|%>
  <br>

  <%# エラーメッセージ  %>
  <%= render 'layouts/error_messages', model: form.object %>
  <br>

  <!-- 投稿詳細入力フォーム -->
  <div class="form-floating">
    <%= form.text_field :title, class: "form-control", id: "floatingInput", placeholder: "Title" %>
    <%= form.label :title, "タイトル", class: "form-label", for: "floatingInput" %>
  </div>

  <div class="form-floating">
    <%= form.text_area :content, class: "form-control", id: "floatingInput", placeholder: "Content", rows:"3" %>
    <%= form.label :content, "投稿内容", class: "form-label", for: "floatingInput" %>
  </div>

  <div class="image-field">
    <div class="container-sm">
      <div id="previews"></div>
    </div>
    <div class="form-floating">
      <%= form.file_field :image, class: "form-control", id:"exampleFormControlFile1" %>
      <%= form.label :image, class: "form-label", for: "floatingInput" %>
    </div>
  </div>

  <div class="form-floating">
    <%= form.date_field :shooting_date, class: "form-control", id: "floatingInput", placeholder: "撮影日" %>
    <%= form.label :shooting_date, "撮影日", class: "form-label", for: "floatingInput" %>
  </div>

  <div class="form-floating" id="select-wrap">
    <%= form.collection_select(:ancestry, @maincategories, :id, :category_name, {include_blank: "---"}, {class:"form-select", id:"parent-category"}) %>
    <%= form.label :category_name, "カテゴリー", class: "form-label", for: "floatingInput" %>
  </div>

  <div class="form-floating">
    <%= form.text_field :tag_name, class: "form-control", id: "tag_name_floatingInput", placeholder: 'Add Tags' %>
    <%= form.label :tag_name, "#タグ", class: "form-label", for: "floatingInput" %>
    <div class="d-flex justify-content-center">
      <ul class="list-group w-50" id="search-result"></ul>
    </div>
  </div>


  <!-- /投稿詳細入力フォーム -->

  <br>

  <!-- 位置情報入力フォーム -->

  <p class="h3 mt-5 mb-4 fw-normal">Registration of Spot</p>
  <p class="">マーカーをドラック＆ドロップで位置の調整ができます。<p>

  <div class="input-group">
    <input id="address" type="text" class="form-control" placeholder="Search Spot Address" aria-label="Recipient's username" aria-describedby="button-addon2">
    <button class="btn btn-outline-secondary" type="button" id="button-addon2" onclick="codeAddress()">Search</button>
  </div>

  <br>

  <div id='map'></div>

  <br>

  <div class="input-group mb-3">
    <div class="form-floating">
      <%= form.text_field :latitude, class: "form-control", id: 'latitude', readonly: true %>
      <%= form.label :latitude, "緯度", class: "form-label", for: "floatingInput" %>
    </div>
    <div class="form-floating">
      <%= form.text_field :longitude, class: "form-control", id: 'longitude', readonly: true %>
      <%= form.label :longitude, "経度", class: "form-label", for: "floatingInput" %>
    </div>
  </div>

  <br/>
  <%= form.submit "投稿する", class: "btn btn-lg btn-success mt-3 mb-3" %>
<% end %>

  <!-- /位置情報入力フォーム -->

  <!-- Googlemapスクリプト -->

  <style>
  #map{
    height: 470px;
  }
  </style>

<script>
//初期マップの設定
let map
let marker
function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center:  {lat: 35.6803997, lng:139.7690174},  //東京
    zoom: 15,
    
  });
}

//検索後のマップ作成
let geocoder
let aft
function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
        //マーカーが複数できないようにする
        if (aft == true){
            marker.setMap(null);
        }

        //新しくマーカーを作成する
        map.setCenter(results[0].geometry.location);
            marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            draggable: true	// ドラッグ可能にする
        });

        //二度目以降か判断
        aft = true

        //検索した時に緯度経度を入力する
        document.getElementById('latitude').value = results[0].geometry.location.lat();
        document.getElementById('longitude').value = results[0].geometry.location.lng();

        // マーカーのドロップ（ドラッグ終了）時のイベント
        google.maps.event.addListener( marker, 'dragend', function(ev){
            // イベントの引数evの、プロパティ.latLngが緯度経度
            document.getElementById('latitude').value = ev.latLng.lat();
            document.getElementById('longitude').value = ev.latLng.lng();
        });
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });   
}

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>

<!-- /Googlemapスクリプト -->